name: Staging CI

on:
  push:
    branches: staging

jobs:
  lint_helm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Lint Helm
        run: helm lint ./charts/fbw-api
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: flybywiresim/api
          tag-sha: true
          tag-latest: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=flybywiresim/api:staging
          cache-to: type=inline
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy_staging:
    runs-on: ubuntu-latest
    needs: [build_and_push, lint_helm]
    env:
      NAMESPACE: fbw-api-staging
      RELEASE_NAME: fbw-api-staging
      VALUES_FILE: ./charts/fbw-api/environments/staging.yaml
      DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
      AUTH_SECRET: ${{ secrets.STAGING_AUTH_SECRET }}
    steps:
      - uses: actions/checkout@v1
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}
      - name: Deploy
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7) &&
          helm upgrade --namespace ${NAMESPACE} --set api.database.password=${DB_PASSWORD},api.auth.secret=${AUTH_SECRET},image.tag=sha-${TAG} \
          -f ./charts/fbw-api/values.yaml -f ${VALUES_FILE} ${RELEASE_NAME} ./charts/fbw-api
